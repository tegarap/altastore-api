openapi: 3.0.3
info:
  title: Alta Online Store
  description: Alta Online Store is blablabla
  version: 1.0.0
  contact:
    name: Alta Company
    email: tegara946@gmail.com
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - description: Server Alta Store API
    url: https://{environment}.altastore.id/api/v1
    variables:
      environment:
        default: dev
        enum:
          - dev
          - prod
paths:
  #######################################################
  #
  #  CUSTOMERS
  #
  #######################################################
  /customers/register:
    post:
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomersSchema'
      responses:
        '200':
          $ref: '#/components/responses/registerSuccess'
        '400':
          $ref: '#/components/responses/registerFail'
  /customers/login:
    post:
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: mamangjarwo@gmail.com
                password:
                  type: string
                  example: asdfqwer
      responses:
        '200':
          $ref: '#/components/responses/loginSuccess'
        '400':
          $ref: '#/components/responses/loginFail'
  /customers:
    get:
      tags:
        - Customers
      responses:
        '200':
          $ref: '#/components/responses/getAllCustomerSuccess'
        '400':
          $ref: '#/components/responses/getAllCustomerFail'
  /customers/{id}:
    get:
      tags:
        - Customers
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/getCustomerSuccess'
        '400':
          $ref: '#/components/responses/getCustomerFail'
    put:
      tags:
        - Customers
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomersSchema'
      responses:
        '200':
          $ref: '#/components/responses/updateCustomerSuccess'
        '400':
          $ref: '#/components/responses/updateCustomerFail'
    delete:
      tags:
        - Customers
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/deleteCustomerSuccess'
        '400':
          $ref: '#/components/responses/deleteCustomerFail'
  #######################################################
  #
  #  PRODUCTS
  #
  #######################################################
  /products:
    post:
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsSchema'
      responses:
        '200':
          $ref: '#/components/responses/createProductSuccess'
        '400':
          $ref: '#/components/responses/createProductFail'
    get:
      tags:
        - Products
      responses:
        '200':
          $ref: '#/components/responses/getAllProductSuccess'
        '400':
          $ref: '#/components/responses/getAllProductFail'
  /products/{id}:
    get:
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/getProductSuccess'
        '400':
          $ref: '#/components/responses/getProductFail'
    put:
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsSchema'
      responses:
        '200':
          $ref: '#/components/responses/updateProductSuccess'
        '400':
          $ref: '#/components/responses/updateProductFail'
    delete:
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/deleteProductSuccess'
        '400':
          $ref: '#/components/responses/deleteProductFail'
  #######################################################
  #
  #  CATEGORIES
  #
  #######################################################
  /categories:
      post:
        tags:
          - Categories
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/'
        responses:
          '200':
            $ref: '#/components/responses/'
          '400':
            $ref: '#/components/responses/'
      get:
        tags:
          - Categories
        responses:
          '200':
            $ref: '#/components/responses/'
          '400':
            $ref: '#/components/responses/'
  /categories/{id}:
      get:
        tags:
          - Categories
        parameters:
          - in: path
            name: id
            schema:
              type: number
              example: 1
            required: true
        responses:
          '200':
            $ref: '#/components/responses/'
          '400':
            $ref: '#/components/responses/'
      put:
        tags:
          - Categories
        parameters:
          - in: path
            name: id
            schema:
              type: number
              example: 1
            required: true
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/'
        responses:
          '200':
            $ref: '#/components/responses/'
          '400':
            $ref: '#/components/responses/'
      delete:
        tags:
          - Categories
        parameters:
          - in: path
            name: id
            schema:
              type: number
              example: 1
            required: true
        responses:
          '200':
            $ref: '#/components/responses/'
          '400':
            $ref: '#/components/responses/'
  #######################################################
  #
  #  CART
  #
  #######################################################
  /carts:
    post:
      tags:
        - Carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartsSchema'
      responses:
        '200':
          $ref: '#/components/responses/createCartSuccess'
        '400':
          $ref: '#/components/responses/createCartFail'
    get:
      tags:
        - Carts
      responses:
        '200':
          $ref: '#/components/responses/getAllCartSuccess'
        '400':
          $ref: '#/components/responses/getAllCartFail'
  /carts/{id}:
    get:
      tags:
        - Carts
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/getCartSuccess'
        '400':
          $ref: '#/components/responses/getCartFail'
    put:
      tags:
        - Carts
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartsSchema'
      responses:
        '200':
          $ref: '#/components/responses/updateCartSuccess'
        '400':
          $ref: '#/components/responses/updateCartFail'
    delete:
      tags:
        - Carts
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/deleteCartSuccess'
        '400':
          $ref: '#/components/responses/deleteCartFail'
components:
  responses:
    ####################################
    #    RESPONSE REGISTER
    ####################################
    registerSuccess:
      description: success register
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Register Success
    registerFail:
      description: fail to register
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Register
    ####################################
    #    RESPONSE LOGIN
    ####################################
    loginSuccess:
      description: success login
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Login Success
    loginFail:
      description: fail to login
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Login
    ####################################
    #    RESPONSE GET ALL CUSTOMER
    ####################################
    getAllCustomerSuccess:
      description: success get all customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get all customer
              data:
                $ref: '#/components/schemas/ArrayOfCustomerSchema'
    getAllCustomerFail:
      description: fail to get all customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get All Customer
    ####################################
    #    RESPONSE GET CUSTOMER
    ####################################
    getCustomerSuccess:
      description: success get customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get customer
              data:
                $ref: '#/components/schemas/CustomersSchema'
    getCustomerFail:
      description: fail to get customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get Customer
    ####################################
    #    RESPONSE UPDATE CUSTOMER
    ####################################
    updateCustomerSuccess:
      description: success update customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Update Customer
    updateCustomerFail:
      description: fail to update customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Update Customer
    ####################################
    #    RESPONSE DELETE CUSTOMER
    ####################################
    deleteCustomerSuccess:
      description: success delete customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Delete Customer
    deleteCustomerFail:
      description: fail to delete customer
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Delete Customer
    ####################################
    #    RESPONSE CREATE PRODUCT
    ####################################
    createProductSuccess:
      description: success create product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Creare Product Success
    createProductFail:
      description: fail to create product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Create Product
    ####################################
    #    RESPONSE GET ALL PRODUCT
    ####################################
    getAllProductSuccess:
      description: success get all product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get all product
              data:
                $ref: '#/components/schemas/ArrayOfProductSchema'
    getAllProductFail:
      description: fail to get all product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get All Product
    ####################################
    #    RESPONSE GET PRODUCT
    ####################################
    getProductSuccess:
      description: success get product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get product
              data:
                $ref: '#/components/schemas/ProductsSchema'
    getProductFail:
      description: fail to get product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get Product
    ####################################
    #    RESPONSE UPDATE PRODUCT
    ####################################
    updateProductSuccess:
      description: success update product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Update Product
    updateProductFail:
      description: fail to update product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Update Product
    ####################################
    #    RESPONSE DELETE PRODUCT
    ####################################
    deleteProductSuccess:
      description: success delete product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Delete Product
    deleteProductFail:
      description: fail to delete product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Delete Product
    ##########################################
    #    RESPONSE GET PRODUCTS FROM CATEGORY
    ##########################################
    getProductsFromCategorySuccess:
      description: success get products from category
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get product
              data:
                $ref: '#/components/schemas/ProductFromCategorySchema'
    #    getProductsFromCategoryFail:
    #      description:
    ####################################
    #    RESPONSE CREATE CART
    ####################################
    createCartSuccess:
      description: success create cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Creare Cart Success
    createCartFail:
      description: fail to create cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Create Cart
    ####################################
    #    RESPONSE GET ALL CART
    ####################################
    getAllCartSuccess:
      description: success get all cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get all cart
              data:
                $ref: '#/components/schemas/ArrayOfCartSchema'
    getAllCartFail:
      description: fail to get all cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get All Cart
    ####################################
    #    RESPONSE GET CART
    ####################################
    getCartSuccess:
      description: success get cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success get cart
              data:
                $ref: '#/components/schemas/CartsSchema'
    getCartFail:
      description: fail to get cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get Cart
    ####################################
    #    RESPONSE UPDATE CART
    ####################################
    updateCartSuccess:
      description: success update cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Update Cart
    updateCartFail:
      description: fail to update cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Update Cart
    ####################################
    #    RESPONSE DELETE CART
    ####################################
    deleteCartSuccess:
      description: success delete cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Delete Cart
    deleteCartFail:
      description: fail to delete cart
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Delete Cart
  schemas:
    ####################################
    #    CUSTOMERS SCHEMA
    ####################################
    CustomersSchema:
      type: object
      properties:
        name:
          type: string
          example: Boboboy Pratama
        email:
          type: string
          example: boboboy.pratama@gmail.com
        password:
          type: string
          example: luwakwhitecoffee22
        phone:
          type: integer
          example: 082123123123
        address:
          type: string
          example: Ponorogo
        gender:
          type: string
          enum:
            - male
            - female
    ####################################
    #    ARRAY OF CUSTOMER SCHEMA
    ####################################
    ArrayOfCustomerSchema:
      type: array
      items:
        $ref: '#/components/schemas/CustomersSchema'
    ####################################
    #    SIMPLE CUSTOMERS SCHEMA
    ####################################
    SimpleCustomersSchema:
      type: object
      properties:
        name:
          type: string
          example: Boboboy Pratama
        email:
          type: string
          example: boboboy.pratama@gmail.com
        phone:
          type: integer
          example: 082123123123
        address:
          type: string
          example: Ponorogo
        gender:
          type: string
          enum:
            - male
            - female
    ####################################
    #    ARRAY OF SIMPLE CUSTOMER SCHEMA
    ####################################
    ArrayOfSimpleCustomerSchema:
      type: array
      items:
        $ref: '#/components/schemas/SimpleCustomersSchema'
    ####################################
    #    PRODUCTS SCHEMA
    ####################################
    ProductsSchema:
      type: object
      required:
        - category_id
      properties:
        name:
          type: string
          example: Sabun Wing
        description:
          type: string
          example: ini adalah sabun wing
        category_id:
          type: integer
          example: 4
        price:
          type: integer
          example: 100000
        stock:
          type: integer
          example: 50
    ####################################
    #    ARRAY OF PRODUCT SCHEMA
    ####################################
    ArrayOfProductSchema:
      type: array
      items:
        $ref: '#/components/schemas/ProductsSchema'
    ####################################
    #    CATEGORY SCHEMA
    ####################################
    CategorySchema:
      type: object
      properties:
        category_name:
          type: string
          example: alat rumah tangga
    ####################################
    #    ARRAY OF CATEGORY SCHEMA
    ####################################
    ArrayOfCategorySchema:
      type: array
      items:
        $ref: '#/components/schemas/CategorySchema'
    ####################################
    #    CART SCHEMA
    ####################################
    CartsSchema:
      type: object
      required:
        - customer_id
        - cart_detail_id
      properties:
        customer_id:
          type: integer
          example: 1
        cart_detail_id:
          type: integer
          example: 1
    ####################################
    #    CART RELATION SCHEMA
    ####################################
    CartRelationSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/CartsSchema'
        - type: object
          properties:
            customer:
              $ref: '#/components/schemas/SimpleCustomersSchema'
            cart_detail:
              $ref: '#/components/schemas/CartDetailsSchema'
    ####################################
    #    CART DETAILS SCHEMA
    ####################################
    CartDetailsSchema:
      type: object
      required:
        - cart_id
        - product_id
      properties:
        cart_id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 25
    ####################################
    #    CART DETAIL RELATION SCHEMA
    ####################################
    CartDetailRelationSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/CartDetailsSchema'
        - type: object
          properties:
            cart:
              $ref: '#/components/schemas/CartsSchema'
            product:
              $ref: '#/components/schemas/ProductsSchema'
    ####################################
    #    TRANSACTION SCHEMA
    ####################################
    TransactionSchema:
      type: object
      required:
        - customer_id
        - payment_id
        - cart_id
      properties:
        customer_id:
          type: integer
          example: 1
        transaction_detail_id:
          type: integer
          example: 1
        payment_id:
          type: integer
          example: 2
        cart_id:
          type: integer
          example: 1
        total_price:
          type: integer
          example: 250000
        transaction_date:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
    ####################################
    #    TRANSACTION RELATION SCHEMA
    ####################################
    TransactionRelationSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/TransactionSchema'
        - type: object
          properties:
            customer:
              $ref: '#/components/schemas/SimpleCustomersSchema'
            transaction_detail:
              $ref: '#/components/schemas/TransactionDetailSchema'
            payment:
              $ref: '#/components/schemas/PaymentSchema'
            cart:
              $ref: '#/components/schemas/CartsSchema'
    ####################################
    #    PAYMENT SCHEMA
    ####################################
    PaymentSchema:
      type: object
      properties:
        name:
          type: string
          example: AltaPay
    ####################################
    #    TRANSACTION DETAIL SCHEMA
    ####################################
    TransactionDetailSchema:
      type: object
      required:
        - transaction_id
        - product_id
      properties:
        transaction_id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 3
    ####################################
    #    TRANSACTION DETAIL RELATION SCHEMA
    ####################################
    TransactionDetailRelationSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/TransactionDetailSchema'
        - type: object
          properties:
            transaction:
              $ref: '#/components/schemas/TransactionSchema'
            product:
              $ref: '#/components/schemas/ProductsSchema'
    ####################################
    #    DELIVERIES SCHEMA
    ####################################
    DeliveriesSchema:
      type: object
      required:
        - transaction_id
      properties:
        transaction_id:
          type: integer
          example: 1
        status:
          type: string
          example: menunggu pembayaran